format 224
"pomodoro" // pomodoro
  revision 1
  modified_by 42 "tv"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "pomodoro/"
  cpp_src_dir "pomodoro/"
  classview 134570 "pomodoro"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 134570 "BaseDeDonnees"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@class BaseDeDonnees
@brief Déclaration de la classe permettant l'accès à la base de données SQLite
@see https://fr.wikipedia.org/wiki/Singleton_(patron_de_conception)
@author Thierry VAIRA
@version 0.1
"
      operation 134570 "getInstance"
	class_operation preserve_cpp_body_indent public return_type class_ref 134570 // BaseDeDonnees
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définition méthode getInstance()
//@fn BaseDeDonnees::getInstance
//@details Permet l'instanciation d'un objet BaseDeDonnees en vérifiant qu'il n'en existe pas déja
//un
//@return BaseDeDonnees l'instance unique
//

${inline}${typeprefix}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 134698 "detruireInstance"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définition méthode detruireInstance()
//@fn BaseDeDonnees::detruireInstance
//@details Détruit l'instance de la BaseDeDonnees si elle existe et si personne l'utilise
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 134826 "ouvrir"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "nomBase" explicit_type "QString"
	    defaultvalue "FICHIER_BDD"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définition méthode ouvrir()
//@fn BaseDeDonnees::ouvrir
//@details Permet d'ouvrir la base de données
//@param[in] nomBase le fichier au format SQLite
//@return bool
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 134954 "estOuverte"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Retourne l'état d'ouverture à la base de données
//@fn BaseDeDonnees::estOuverte
//@details Retourne l'état d'ouverture à la base de données
//@return bool true si la base de données est ouverte sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 135082 "executer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "requete" explicit_type "QString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Exécute une requête SQL de type UPDATE, INSERT et DELETE
//@fn bool BaseDeDonnees::executer(QString requete)
//@details Exécute une requête SQL de type UPDATE, INSERT et DELETE
//@param[in] requete une requête SQL de type UPDATE, INSERT et DELETE
//@return bool true si la requête a été exécutée avec succès sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " uniquement pour les requêtes UPDATE, INSERT et DELETE "
      end

      operation 135210 "recuperer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "requete" explicit_type "QString"
	  param inout name "donnees" explicit_type "QString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Exécute une requête SQL de type SELECT et récupère un champ d'un seul enregistrement
//@fn bool BaseDeDonnees::recuperer(QString requete, QString &donnees)
//@param[in] requete une requête SQL de type SELECT
//@param[out] donnees le champ QString récupéré
//@return bool true si la requête a été exécutée avec succès sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " uniquement pour les requêtes SELECT "
      end

      operation 135338 "recuperer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "requete" explicit_type "QString"
	  param inout name "donnees" explicit_type "QStringList"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Exécute une requête SQL de type SELECT et récupère plusieurs champs d'un seul
//enregistrement
//@fn bool BaseDeDonnees::recuperer(QString requete, QStringList &donnees)
//@param[in] requete une requête SQL de type SELECT
//@param[out] donnees plusieurs champs d'un seul enregistrement dans un QStringList
//@return bool true si la requête a été exécutée avec succès sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " 1 -> 1"
      end

      operation 135466 "recuperer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "requete" explicit_type "QString"
	  param inout name "donnees" explicit_type "QVector<QString>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Exécute une requête SQL de type SELECT et récupère un seul champ de plusieurs
//enregistrements
//@fn bool BaseDeDonnees::recuperer(QString requete, QVector<QString> &donnees)
//@param[in] requete une requête SQL de type SELECT
//@param[out] donnees un seul champ de plusieurs enregistrements dans un QVector de QString
//@return bool true si la requête a été exécutée avec succès sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " 1 -> 1..*"
      end

      operation 135594 "recuperer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "requete" explicit_type "QString"
	  param inout name "donnees" explicit_type "QVector<QStringList>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Exécute une requête SQL de type SELECT et récupère plusieurs champs de plusieurs
//enregistrements
//@param[in] requete une requête SQL de type SELECT
//@param[out] donnees : plusieurs champs de plusieurs enregistrements dans un QVector de
//QStringList
//@return bool true si la requête a été exécutée avec succès sinon false
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " 1..* -> 1"
      end

      operation 135722 "BaseDeDonnees"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définition du constructeur par défaut de la classe BaseDeDonnees
//@fn BaseDeDonnees::BaseDeDonnees
//@details Initialise le type SQLite pour l'accès à la base de données
//

${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
	comment " 1..* -> 1..*"
      end

      operation 135850 "~BaseDeDonnees"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définition du destructeur de la classe BaseDeDonnees
//@fn BaseDeDonnees::~BaseDeDonnees
//@details Destructeur de la classe BaseDeDonnees
//

${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
      end

      attribute 134570 "db"
	private explicit_type "QSqlDatabase"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "!< pour la connexion à la base de données MySQL"
      end

      classrelation 134570 // bdd (<unidirectional association>)
	relation 134570 --->
	  a role_name "bdd" init_value "= nullptr" class_relation private
	    comment "!< pointeur sur l'instance unique"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 134570 // bdd (<unidirectional association>)
	  b parent class_ref 134570 // BaseDeDonnees
      end

      attribute 134698 "nbAcces"
	class_attribute private explicit_type "int"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "!< compte le nombre d'accès à l'instance unique"
      end
    end

    class 134698 "Cycle"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 135978 "Cycle"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
      end
    end

    class 134826 "Pomodoro"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@class Pomodoro
@brief Affiche les différents écrans de l'application Pomodoro
"
      classrelation 134698 // <generalisation>
	relation 134698 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 134698 // <generalisation>
	  b parent class_ref 134954 // typedef1
      end

      extra_member 134570 "Q_OBJECT"
	
	cpp "  Q_OBJECT" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 135082 "Ecran"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 134826 "Accueil"
	  public type class_ref 135082 // Ecran
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 134954 "Tache"
	  public type class_ref 135082 // Ecran
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 135082 "Cycle"
	  public type class_ref 135082 // Ecran
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 135210 "Session"
	  public type class_ref 135082 // Ecran
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 135338 "NbEcrans"
	  public type class_ref 135082 // Ecran
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 136106 "Pomodoro"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "parent" explicit_type "QWidget"
	    defaultvalue "nullptr"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Constructeur de la classe Pomodoro
//
//@fn Pomodoro::Pomodoro
//@param parent nullptr pour définir la fenêtre principale de l'application
//

${inline}${typeprefix}${class}::${name}${(}${t0} * ${p0}${)} : QWidget(parent), ui(new Ui::GUIPomodoro)
${throw}{
${body}}
"
	
	
	
	
      end

      operation 136234 "~Pomodoro"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Destructeur de la classe Pomodoro
//
//@fn Pomodoro::~Pomodoro
//@details Libère les ressources de l'application
//

${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
      end

      attribute 135466 "ui"
	private explicit_type "Ui::GUIPomodoro"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "!< la fenêtre graphique associée à cette classe"
      end

      classrelation 134826 // bddPomodoro (<unidirectional association>)
	relation 134826 --->
	  a role_name "bddPomodoro" private
	    comment "!< l'objet BaseDeDonnees"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 134826 // bddPomodoro (<unidirectional association>)
	  b parent class_ref 134570 // BaseDeDonnees
      end

      operation 136362 "initialiserGui"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 136490 "ouvrirBaseDeDonnees"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@fn Pomodoro::ouvrirBaseDeDonnees()
//@brief Instancie l'objet et l'accès à base de données
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 136618 "connecterSignauxSlots"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@fn Pomodoro::connecterSignauxSlots()
//@brief Connecte les signaux aux slots pour l'application
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      extra_member 134698 "slots"
	
	cpp "  public slots:" ""
	java ""
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 136746 "afficherEcran"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "ecran" type class_ref 135082 // Ecran
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@fn Pomodoro::afficherEcran(Pomodoro::Ecran ecran)
//@brief Selectionne et affiche l'écran
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 136874 "afficherEcranAccueil"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@fn Pomodoro::afficherEcranAccueil()
//@brief Affiche l'écran d'accueil
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 137002 "afficherEcranTache"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@fn Pomodoro::afficherEcranConfiguration()
//@brief Affiche l'écran de configuration
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end
    end

    class 134954 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "QWidget"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 135210 "Session"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 137130 "Session"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
      end
    end

    class 135338 "Tache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 137258 "Tache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${typeprefix}${class}::${name}${(}${)}${throw}{
${body}}
"
	
	
	
	
      end
    end

    classdiagram 134570 "diagramme de classes 0.1"
      classdiagramsettings show_members_full_definition yes show_members_visibility yes member_max_width 0 show_relation_visibility yes end
      size A0
    end
  end

  deploymentview 134570 "pomodoro"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 134570 "basededonnees"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 134570 // BaseDeDonnees
      end
    end

    artifact 134698 "cycle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 134698 // Cycle
      end
    end

    artifact 134826 "pomodoro"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 134826 // Pomodoro
      end
    end

    artifact 134954 "session"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 135210 // Session
      end
    end

    artifact 135082 "tache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 135338 // Tache
      end
    end

    artifact 135210 "main"
      stereotype "source"
      cpp_src "//
//@file main.cpp
//@brief Programme principal
//@details Crée et affiche la fenêtre principale de l'application Pomodoro
//@author Pierre HIRSCH
//@version 1.0
//
//@param argc
//@param argv[]
//@return int
//

int main(int argc, char* argv[])
{
    QApplication a(argc, argv);
    Pomodoro     pomodoro;

    pomodoro.show();

    return a.exec();
}
"
      associated_elems
      end
    end
  end
end
